@page "/config/{GuildIdStr}"
@layout PanelLayout

@using SocialGuard.YC.Data.Models.Config
@using SocialGuard.YC.Infrastructure.Security.Authorization

@inject DiscordClient BotClient
@inject GuildConfigService ConfigService

@* TODO: Add Authorization. *@

@if (_config is not null)
{
	<AuthorizeView Policy="@AuthorizationExtensions.RequireManageGuildPermission" Resource="@(_guild?.Id ?? 0)" Context="authContext">
		<Authorized>
			<div class="d-flex flex-md-row justify-content-between m-3 mb-5">
				<div><h1><i class="bi-wrench me-3"></i>Trustlist Configuration</h1></div>
				@RazorUtilities.GuildCornerInfo(_guild!)
			</div>


			<hr class="my-5" />

			@if (_displaySaveAlert)
			{
				<div class="alert alert-success my-3">
					<p class="my-0">
						<i class="bi-check-circle me-3"></i>Changes to Trustlist configuration were saved.
					</p>
				</div>
			}

			@if (_config is not null)
			{
				<EditForm Model="_config" OnValidSubmit="OnValidSubmitAsync" Context="configContext">
					<div class="row gap-xl-3 my-5" id="config">
						<div class="col-xl-4 col-lg-6" id="join-leave-logs">
							<h3>
								<i class="bi-person-plus-fill me-3"></i> Join/Leave Logs
							</h3>

							<div class="my-3">
								<label class="form-label">Join Log channel</label>

								<select @bind="@_config.JoinLogChannel" class="form-select">
									<option selected value="0">(None)</option>
									@foreach (KeyValuePair<ulong, DiscordChannel> channel in _guild.Channels
										.Where(c => c.Value.Type is ChannelType.Text)
										.OrderBy(c => c.Value.Name))
									{
										<option selected="@(channel.Key == _config.JoinLogChannel)" value="@channel.Key.ToString()">@channel.Value.Name</option>
									}
								</select>
							</div>

							<div class="form-check my-3">
								<InputCheckbox @bind-Value=_config.SuppressJoinlogCleanRecords class="form-check-input" />
								<label class="form-check-label">
									Suppress<span class="text-success">Clean (N+0)</span> records from Join Log
								</label>
							</div>

							<div class="my-3">
								<div class="d-flex flex-row justify-content-between">
									<label class="form-label">Leave Log channel</label>

									<div>
										<label class="form-check-label mx-2">Enable</label>
										<InputCheckbox @bind-Value=_config.LeaveLogEnabled class="form-check-input" />
									</div>
								</div>

								<select @bind="@_config.LeaveLogChannel" class="form-select" disabled="@(!_config.LeaveLogEnabled)">
									<option selected value="0">(None)</option>
									@foreach (KeyValuePair<ulong, DiscordChannel> channel in _guild.Channels
										.Where(c => c.Value.Type is ChannelType.Text)
										.OrderBy(c => c.Value.Name))
									{
										<option selected="@(channel.Key == _config.LeaveLogChannel)" value="@channel.Key.ToString()">@channel.Value.Name</option>
									}
								</select>
							</div>
						</div>

						<div class="col-xl-4 col-lg-6" id="join-leave-logs">
							<h3>
								<i class="bi-shield-fill-x me-3"></i> Ban Logs
							</h3>

							<div class="my-3">
								<label class="form-label">Ban Log channel</label>
								<select @bind="@_config.BanLogChannel" class="form-select">
									<option selected value="0">(None)</option>
									@foreach (KeyValuePair<ulong, DiscordChannel> channel in _guild.Channels
										.Where(c => c.Value.Type is ChannelType.Text)
										.OrderBy(c => c.Value.Name))
									{
										<option selected="@(channel.Key == _config.BanLogChannel)" value="@channel.Key.ToString()">@channel.Value.Name</option>
									}
								</select>
							</div>

							<div class="form-check my-3">
								<InputCheckbox @bind-Value="_config.AutoBanBlacklisted" class="form-check-input" />
								<label class="form-check-label">Automatically ban all<span class="text-danger">Dangerous (N+3)</span> users</label>
							</div>
						</div>
					</div>

					<div>
						<button class="btn btn-success px-5" type="submit">Save</button>
					</div>
				</EditForm>
			}
		</Authorized>

		<NotAuthorized>
			<h3 class="text-danger mx-3 my-5">
				<i class="bi-shield-fill-x me-3"></i>
				You are not authorized to edit settings for Guild <span class="font-monospace">@_guild!.Id</span>.
			</h3>
		</NotAuthorized>
	</AuthorizeView>
}
else if (_guild is not null) 
{
	@RazorUtilities.LoadingSpinner
}
else
{
	<h3 class="text-warning">No Server found for ID<span class="font-monospace">@GuildIdStr</span>.</h3>
}

@code {

	[Parameter]
	public string? GuildIdStr { get; set; }

	private DiscordGuild? _guild;
	private GuildConfig? _config;

	private bool _displaySaveAlert;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		if (ulong.TryParse(GuildIdStr, out ulong guildId) && BotClient.Guilds.TryGetValue(guildId, out DiscordGuild? guild))
		{
			_guild = guild;
			_config = await ConfigService.GetGuildConfigAsync(guildId);
		}
	}

	private async Task OnValidSubmitAsync()
	{
		await ConfigService.SetGuildConfigAsync(_config!);
		_displaySaveAlert = true;
	}

}